[
  {
    "title": "MERN Advanced eCommerce App",
    "description": "This eCommerce application, built with the MERN stack (MongoDB, Express, React, Node.js), incorporates Redis for caching, signed URL uploads for images, and Razorpay webhooks for real-time payment processing. It ensures secure authentication with JWT tokens for access and refresh, utilizes React Query for efficient API fetching and client-side caching, and manages global state with the Context API. Key features include cart and wishlist management, real payments with order placement and cancellation, stock locking and reduction, and a comprehensive admin panel for managing products, orders, coupons, and tracking analytics through graphs, providing a seamless and robust eCommerce experience.",
    "imgPath": "AD_ECOM",
    "ghLink": "https://github.com/sabari-vr/mern-advanced-ecom",
    "demoLink": "https://mern-advanced-ecom.onrender.com"
  },
  {
    "title": "Next JS Whatsapp Clone",
    "description": "This is a modern messaging application built with Next.js 14, TypeScript, and TailwindCSS, leveraging Convex for serverless functionality and Clerk for seamless authentication. The app allows users to create private and group chats, view online/offline statuses, and manage group memberships with admin controls. It supports video calls and the ability to send images and videos within chats. Advanced features include OpenAI integration for ChatGPT and DALL-E-3, robust error handling, and global state management using Zustand. The application also offers a light/dark mode toggle and is fully deployed, showcasing best practices in modern web development.",
    "imgPath": "WHATSAPP",
    "ghLink": "https://github.com/sabari-vr/pern-advanced-ecom",
    "demoLink": "https://pern-advanced-ecom.onrender.com"
  },
  {
    "title": "PERN Advanced eCommerce App",
    "description": "This eCommerce application, built with the PERN stack (PostgreSQL, Express, React, Node.js), incorporates Redis for caching, signed URL uploads for images, and Razorpay webhooks for real-time payment processing. It ensures secure authentication with JWT tokens for access and refresh, utilizes React Query for efficient API fetching and client-side caching, and manages global state with the Context API. Key features include cart and wishlist management, real payments with order placement and cancellation, stock locking and reduction, and a comprehensive admin panel for managing products, orders, coupons, and tracking analytics through graphs, providing a seamless and robust eCommerce experience.",
    "imgPath": "PERN_ECOM_APP",
    "ghLink": "https://github.com/sabari-vr/pern-advanced-ecom",
    "demoLink": "https://pern-advanced-ecom.onrender.com"
  },
  {
    "title": "PERN chat App",
    "description": "This is a real-time chat application built using the PERN stack (PostgreSQL, Express, React, Node.js) with Socket.io for instant messaging. It features secure user authentication using JWT tokens for access and refresh, ensuring seamless and protected communication. The app provides a smooth, interactive chat experience with a focus on performance and security.",
    "imgPath": "CHAT_APP",
    "ghLink": "https://github.com/sabari-vr/pern-chat-app",
    "demoLink": "https://pern-chat-app-880d.onrender.com"
  },
  {
    "title": "Expense GQL App",
    "description": "A modern application built with the MERN stack and GraphQL. This app is designed to help users efficiently manage and track their expenses, providing an intuitive and responsive user interface for logging, categorizing, and analyzing spending. The backend is powered by GraphQL, allowing for flexible querying and streamlined communication between the client and server. With this app, users can add expenses and gain insights into their spending habits, making financial management simpler and more effective.",
    "imgPath": "EXPENCE_GQL",
    "ghLink": "https://github.com/sabari-vr/mern-expence-tracker-gql",
    "demoLink": "https://mern-expence-tracker-gql.onrender.com/"
  },
  {
    "title": "MERN Advanced Auth App",
    "description": "A robust MERN application that focuses on advanced user authentication with JWT (JSON Web Tokens). It includes features such as email verification, password reset, and recovery. The frontend leverages React Query for efficient data handling and caching, while the backend is fully documented with Swagger for easy API integration.",
    "imgPath": "AD_AUTH",
    "ghLink": "https://github.com/sabari-vr/mern-advanced-auth",
    "demoLink": "https://mern-advanced-auth-wowh.onrender.com/login"
  },
  {
    "title": "EV Charging Station App",
    "description": "A mobile application built with React Native that allows users to find nearby or specific EV charging stations, add them to their favorites for quick access, and navigate to them using Google Maps. The app also features user authentication powered by Clerk for a secure and personalized experience",
    "imgPath": "EV_charging",
    "ghLink": "https://github.com/sabari-vr/EV-Charging-Station-App",
    "demoLink": "https://drive.google.com/file/d/1Odm9mpTvbIDCNJWJtAkInggB1KdA9Mxh/view?usp=sharing"
  },
  {
    "title": "MERN Auth App",
    "description": "An application focused on authentication using JWT (JSON Web Tokens). The frontend is built with React Query for efficient data fetching and state management, while the backend employs Swagger for comprehensive API documentation.",
    "imgPath": "MERN_auth",
    "ghLink": "https://github.com/sabari-vr/MERN-auth",
    "demoLink": null
  },
  {
    "title": "Portfolio App",
    "description": "A portfolio application built with React JS and TypeScript. It features various options such as 'Contact Us,' 'Download Resume,' and other interactive elements to showcase your work and make it easy for visitors to connect with you.",
    "imgPath": "my_portfolio",
    "ghLink": "https://github.com/sabari-vr/my-portfolio",
    "demoLink": "https://sabari-vr.github.io/my-portfolio"
  },
  {
    "title": "Country List App",
    "description": "A small app built with React JS that fetches and displays a list of countries in a card format. Users can filter countries through the navbar.",
    "imgPath": "country_list",
    "ghLink": "https://github.com/sabari-vr/country_list",
    "demoLink": "https://sabari-vr.github.io/country_list"
  }
]
